[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add='''
  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <cr>
    \ denite#do_map('do_action')
    nnoremap <silent><buffer><expr> <c-s>
    \ denite#do_map('do_action', 'split')
    nnoremap <silent><buffer><expr> <c-v>
    \ denite#do_map('do_action', 'vsplit')
    nnoremap <silent><buffer><expr> p
    \ denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr><nowait> q
    \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> i
    \ denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <space>
    \ denite#do_map('toggle_select')
  endfunction
  autocmd FileType denite-filter call s:denite_filter_my_settings()
  function! s:denite_filter_my_settings() abort
    imap <silent><buffer> <esc> <Plug>(denite_filter_quit)
    imap <silent><buffer> <cr> <esc><cr>
  endfunction
  nnoremap [Denite] <Nop>
  nmap <silent><space> [Denite]
  nnoremap [Denite]f :<c-u>Denite file/rec -start-filter<CR>
  nnoremap [Denite]m :<c-u>Denite file_mru<CR>
  nnoremap [Denite]/ :<c-u>Denite line -start-filter<CR>
  nnoremap [Denite]g :<c-u>Denite grep<CR>
  nnoremap [Denite]r :<c-u>Denite -resume<CR>
  nnoremap [Denite]p :<c-u>Denite neosnippet<CR>
  nnoremap [Denite]<space> :Denite source<CR>

  if executable("ag")
    call denite#custom#var('file_rec', 'command',
        \ ['ag', '--hidden', '--follow', '--nocolor', '--nogroup', '-g', ''])
    call denite#custom#var('grep', 'command', ['ag'])
    call denite#custom#var('grep', 'default_opts',
        \ ['--hidden', '--follow', '-S', '--vimgrep'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'pattern_opt', [])
    call denite#custom#var('grep', 'separator', ['--'])
    call denite#custom#var('grep', 'final_opts', [])
  endif
'''
[[plugins]]
repo = 'Shougo/neomru.vim'
[[plugins]]
repo = 'altercation/vim-colors-solarized'
hook_add='''
  colorscheme solarized
  let g:solarized_termtrans=1
  let g:solarized_visibility="low"
  let g:solarized_termcolors=256
'''
[[plugins]]
repo = 'tpope/vim-surround'
[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add='''
set completeopt+=noselect
set completeopt-=preview
let g:deoplete#enable_at_startup = 1
let g:deoplete#auto_complete_delay = 0
let g:deoplete#auto_complete_start_length = 1
inoremap <expr><C-h> deoplete#smart_close_popup()."\<C-h>"
inoremap <expr><BS>  deoplete#smart_close_popup()."\<C-h>"
imap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
let g:cache_completed = {}
function! s:my_cr_function() abort
  if has_key(v:completed_item, 'word') && g:cache_completed != v:completed_item
    let g:cache_completed = v:completed_item
    return deoplete#close_popup()
  else
    return deoplete#close_popup() . "\<CR>"
  endif
endfunction
"imap <silent><expr> <cr> neosnippet#expandable_or_jumpable()?
"  \ "\<Plug>(neosnippet_expand_or_jump)":
"  \ deoplete#close_popup() . "\<CR>"
'''
[[plugins]] # deoplete source from syntax highlight
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'Shougo/echodoc.vim'
hook_add = '''
"set noshowmode
let g:echodoc#enable_at_startup = 1
let g:echodoc#type = 'virtual'
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add='''
imap <silent><expr> <tab> neosnippet#expandable_or_jumpable()? "\<Plug>(neosnippet_expand_or_jump)": "\<tab>"
smap <silent><expr> <tab> neosnippet#expandable_or_jumpable()? "\<Plug>(neosnippet_expand_or_jump)": "\<tab>"
nmap <silent><expr> <tab> neosnippet#expandable_or_jumpable()? "\<Plug>(neosnippet_expand_or_jump)": "\<tab>"
xmap <silent><expr> <tab> neosnippet#expandable()? "\<Plug>(neosnippet_expand_target)": "\<tab>"
"let g:neosnippet#enable_complete_done = 1
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
hook_add='''
let g:extra_whitespace_ignored_filetypes=['denite']
autocmd BufWinEnter * if ShouldMatchWhitespace() | match ExtraWhitespace /\\\@<![\u3000[:space:]]\+$/ | else | match ExtraWhitespace /^^/ | endif
'''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
build = './install.sh'
hook_add = '''
set hidden
let g:LanguageClient_loggingFile = '/tmp/languageclient.log'
let g:LanguageClient_serverCommands = {
  \ 'haskell': ['stack', 'exec', 'hie', '--', '--lsp'],
  \ 'python': ['pyls'],
  \ 'rust': ['rls'],
  \ 'purescript': ['purescript-language-server', '--stdio'],
  \ }
nnoremap [Denite]h :call LanguageClient#textDocument_hover()<CR>
'''

[[plugins]]
repo = 'https://github.com/purescript-contrib/purescript-vim'
