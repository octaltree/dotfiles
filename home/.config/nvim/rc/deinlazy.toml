
[[plugins]] # virtualsnip {{{
repo = 'octaltree/virtualsnip'
build = 'make'
on_event = 'InsertEnter'
depends = ['vim-vsnip']
hook_source='call virtualsnip#enable()'
hook_add='''
"let g:virtualsnip#enable_at_startup = v:true
let g:virtualsnip#sign = ' Â» '
let g:virtualsnip#highlight_base = 'Comment'
''' # }}}

[[plugins]] # whitespace {{{
repo = 'bronson/vim-trailing-whitespace'
on_event = 'InsertLeave,TextChanged'
hook_source='''
let g:extra_whitespace_ignored_filetypes=['markdown']
autocmd BufRead,BufNewFile * if ShouldMatchWhitespace() | match ExtraWhitespace /\\\@<![\u3000[:space:]]\+$/ | else | match ExtraWhitespadce /^^/ | endif
''' # }}}

[[plugins]] # winresizer {{{
repo = 'simeji/winresizer'
on_cmd = 'WinResizerStartResize' # }}}

[[plugins]] # sudo {{{
repo = 'lambdalisue/suda.vim'
on_event = 'BufRead'
hook_add = '''
let g:suda_smart_edit = 1
''' # }}}

[[plugins]] # markdown {{{
repo = 'kannokanno/previm'
on_cmd = 'PrevimOpen'
hook_add = '''
let g:previm_open_cmd = 'firefox'
let g:previm_disable_vimproc = 1
''' # }}}

[[plugins]] # web {{{
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css', 'php', 'smarty', 'javascript']
hook_add = '''
  let g:user_emmet_install_global = 0
  autocmd FileType html,css,php,smarty,javascript EmmetInstall
  let g:user_emmet_mode='niv'
  let g:user_emmet_expandabbr_key = '<c-e>'
  let g:user_emmet_settings =
        \{ 'variables': { 'lang': 'ja'}
        \, 'indentaion': '  '
        \}
''' # }}}

[[plugins]] # rust {{{
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_add='''
let g:rustfmt_autosave = 1
''' # }}}

 # lsp {{{
[[plugins]]
repo = 'https://github.com/nvim-lua/lsp_extensions.nvim'
on_ft = ['rust']
[[plugins]]
repo = 'neovim/nvim-lspconfig'
depends = ['lsp_extensions.nvim']
on_ft = ['rust', 'c', 'cpp', 'sh', 'python', 'tex', 'javascript', 'typescript', 'graphql']
hook_source = 'doautocmd <nomodeline> User LspconfigSource'
[[plugins]]
repo = 'folke/trouble.nvim'
cmd = 'TroubleToggle'
hook_add = '''
  lua require("trouble").setup {}
'''
# }}}

# vim: foldmethod=marker
